SELECT * FROM DBA_USERS;

DROP USER RE CASCADE;
DROP USER RAM CASCADE;
DROP USER ZERO CASCADE;
DROP USER UKJW CASCADE;
DROP USER KJW CASCADE;

CREATE USER SAM
IDENTIFIED BY "0000";

GRANT DBA TO SAM;

INSERT INTO ST(ST_CODE, ST_NAME, ST_ADDR)
VALUES('S001', 'SAM_MART_J', 'ÀÍ»ê½Ã ¿µµîµ¿');
INSERT INTO ST(ST_CODE, ST_NAME, ST_ADDR)
VALUES('S002', 'SAM_MART_H', 'ÀÎÃµ±¤¿ª½Ã ºÎÆò±¸');
INSERT INTO ST(ST_CODE, ST_NAME, ST_ADDR)
VALUES('S003', 'SAM_MART_Y', 'ÀÎÃµ±¤¿ª½Ã ¹ÌÃßÈ¦±¸');
INSERT INTO ST(ST_CODE, ST_NAME, ST_ADDR)
VALUES('S004', 'SAM_MART_M', 'ÀÎÃµ±¤¿ª½Ã ³²µ¿±¸');

-------------------------------------------------------------------------

INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S001', 'E101', '1111', '±èÁ¾¿ø', 'M');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S001', 'E102', '1111', 'ÇÏÇö¼ö', 'A' );
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S001', 'E103', '1111', 'À¯¿µ¹Î', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S001', 'E104', '1111', '±è¹Î±â', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S002', 'E201', '2222', '±èÁ¾¿ø', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S002', 'E202', '2222', 'ÇÏÇö¼ö', 'M');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S002', 'E203', '2222', 'À¯¿µ¹Î', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S002', 'E204', '2222', '±è¹Î±â', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S003', 'E301', '3333', '±èÁ¾¿ø', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S003', 'E302', '3333', 'ÇÏÇö¼ö', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S003', 'E303', '3333', 'À¯¿µ¹Î', 'M');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S003', 'E304', '3333', '±è¹Î±â', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S004', 'E401', '4444', '±èÁ¾¿ø', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S004', 'E402', '4444', 'ÇÏÇö¼ö', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S004', 'E403', '4444', 'À¯¿µ¹Î', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S004', 'E404', '4444', '±è¹Î±â', 'M');

-----------------------------------------------------------------------------

SELECT EM_STCODE AS "STCODE",
    EM_CODE AS "EMCODE",
    EM_NAME AS "EMNAME",
    EM_LEVEL AS "EMLEVEL"
FROM "EM"
WHERE EM_STCODE = 'S001' AND EM_CODE = 'E102';

SELECT GO_CODE AS "GOCODE",
    GO_NAME AS "GONAME",
    GO_PRICE AS "GOPRICE",
    GO_COMMENTS AS "GOCOMMENTS"
FROM GO;

SELECT GO_CODE AS "GOCODE",
    GO_NAME AS "GONAME",
    GO_PRICE AS "GOPRICE",
    GO_COMMENTS AS "GOCOMMENTS"
FROM GO
WHERE GO_CODE = 'G008' OR GO_CODE = 'G005' OR GO_CODE = 'G022';

SELECT GO_CODE AS "GOCODE",
    GO_NAME AS "GONAME",
    GO_PRICE AS "GOPRICE",
    GO_COMMENTS AS "GOCOMMENTS"
FROM GO
WHERE GO_CODE IN(SELECT OT_GOCODE
                FROM OT);

SELECT *
FROM OT
WHERE OT_ODCODE LIKE '20201013' || '%';

SELECT ABS(65), ABS(-65)
FROM DUAL;

SELECT CEIL(1.956), FLOOR(1.956)
FROM DUAL;

SELECT 7/2, MOD(7, 2)
FROM DUAL;

SELECT ROUND(21.637, 0), ROUND(21.637, 1), ROUND(21.637, -1)
FROM DUAL;

SELECT ROUND(21.637, 0), TRUNC(21.637, 0)
FROM DUAL;

SELECT CONCAT(CONCAT('TEAM', 'SAM'), 'FANA'), 'TEAM' || 'SAM' || 'FANA'
FROM DUAL;

SELECT INSTR('TEADFSLIELSFDLKFJTEADISKETEA', 'TEA', 1),
    INSTR('TEADFSLIELSFDLKFJTEADISKETEA', 'TEA', 1, 2),
    INSTR('TEADFSLIELSFDLKFJTEADISKETEA', 'TEA', 1, 3),
    INSTR('TEADFSLIELSFDLKFJTEADISKETEA', 'TEA', 1, 4)
FROM DUAL;

SELECT TO_CHAR('1000000000000', 'L9,999,999,999,990'),
    TO_CHAR('0', 'L9,999,999,999,900'),
    TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),
    TO_DATE('201023095700', 'YYMMDDHH24MISS')
FROM DUAL;

SELECT SYSDATE AS "¿À´Ã",
    SYSDATE + 3 AS "3ÀÏ µÚ",
    ADD_MONTHS(SYSDATE, 3) AS "3°³¿ù µÚ",
    MONTHS_BETWEEN(SYSDATE, ADD_MONTHS(SYSDATE, 3)) AS "¿À´Ã - 3°³¿ù µÚ",
    MONTHS_BETWEEN(ADD_MONTHS(SYSDATE, 3), SYSDATE) AS "3°³¿ù µÚ - ¿À´Ã",
    LAST_DAY(ADD_MONTHS(SYSDATE, 3)) AS "3°³¿ù µÚ ¸¶Áö¸· ³¯",
    NEXT_DAY(ADD_MONTHS(SYSDATE, 3), 7) AS "3°³¿ù µÚ ÀÏ¿äÀÏ"
FROM DUAL;
---------------------------------------------------------------------------------
SELECT GO.GO_CODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    GO.GO_PRICE AS "GOPRICE",
    SC.SC_EXPIRE AS "SCEXPIRE"
FROM GO INNER JOIN SC ON GO.GO_CODE = SC.SC_GOCODE;

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE = 'R';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE = 'R' AND OT.OT_ODCODE = '20201003113318';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE = 'R' AND OT.OT_GOCODE = 'G003';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE = 'R' AND (OT.OT_GOCODE = 'G003' OR OT.OT_GOCODE = 'G007');

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE != 'R';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE != 'R' AND OT.OT_ODCODE = '20201003113318';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE != 'R' AND OT.OT_GOCODE = 'G003';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE != 'R' AND (OT.OT_GOCODE = 'G003' OR OT.OT_GOCODE = 'G007');

CREATE OR REPLACE VIEW ORDERINFO
AS
SELECT OT.OT_ODCODE AS "ODCODE",
    "EM".EM_STCODE AS "STCODE",
    ST.ST_NAME AS "STNAME",
    OD.OD_EMCODE AS "EMCODE",
    "EM".EM_NAME AS "EMNAME",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY * GO.GO_PRICE AS "PRICE",
    OT.OT_STATE AS "OTSTATE"
FROM OT INNER JOIN OD ON OT.OT_ODCODE = OD.OD_CODE
        INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
        INNER JOIN "EM" ON OD.OD_EMCODE = "EM".EM_CODE
        INNER JOIN ST ON "EM".EM_STCODE = ST.ST_CODE;

CREATE OR REPLACE VIEW EMPLOYEEINFO
AS
SELECT "EM".EM_STCODE AS "STCODE",
    ST.ST_NAME AS "STNAME",
    ST.ST_ADDR AS "STADDR",
    "EM".EM_CODE AS "EMCODE",
    "EM".EM_PWD AS "EMPWD",
    "EM".EM_NAME AS "EMNAME",
    "EM".EM_LEVEL AS "EMLEVEL"
FROM "EM" INNER JOIN ST ON "EM".EM_STCODE = ST.ST_CODE;

SELECT STNAME,
    EMNAME,
    EMLEVEL
FROM SAM.EMPLOYEEINFO
WHERE STCODE = 'S001';

SELECT STNAME,
    EMNAME,
    EMLEVEL
FROM SAM.EMPLOYEEINFO
WHERE EMCODE = 'E101';

SELECT STNAME,
    EMNAME,
    ODCODE,
    GONAME,
    OTQTY,
    GOPRICE,
    PRICE
FROM SAM.ORDERINFO
WHERE EMCODE = 'E101' AND ODCODE >= (ADD_MONTHS(SYSDATE, -1));

SELECT ODCODE,
    GONAME,
    OTQTY,
    GOPRICE,
    PRICE
FROM SAM.ORDERINFO
WHERE GOCODE = 'G005' AND ODCODE >= (ADD_MONTHS(SYSDATE, -1));

SELECT *
FROM SAM.ORDERINFO
WHERE OTSTATE != 'R' AND (GOCODE = 'G003' OR GOCODE = 'G007');

SELECT OI.OT_ODCODE AS "ODCDE",
        OI.GO_NAME AS "GONAME",
        OI.OT_QTY AS "OTQTY",
        OI.GO_PRICE * OI.OT_QTY AS "PRICE"
FROM (SELECT OT.OT_GOCODE,
            OT.OT_ODCODE,
            OT.OT_QTY,
            GO.GO_NAME,
            GO.GO_PRICE
        FROM OT INNER JOIN GO ON GO.GO_CODE = OT.OT_GOCODE) OI
WHERE OI.OT_GOCODE = 'G005' AND OI.OT_ODCODE >= ADD_MONTHS(SYSDATE, -1);

SELECT SAM.EMPLOYEEINFO.STNAME,
        SAM.EMPLOYEEINFO.EMNAME,
        OD.OD_CODE AS "ODCODE",
        GO.GO_NAME AS "GONAME",
        OT.OT_QTY AS "OTQTY",
        GO.GO_PRICE * OT.OT_QTY AS "PRICE"
FROM OT INNER JOIN OD ON OD.OD_CODE = OT.OT_ODCODE
    INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
    INNER JOIN SAM.EMPLOYEEINFO ON OD.OD_EMCODE = SAM.EMPLOYEEINFO.EMCODE AND OD.OD_EMSTCODE = SAM.EMPLOYEEINFO.STCODE
WHERE SAM.EMPLOYEEINFO.EMCODE = 'E203' AND OD.OD_CODE >= ADD_MONTHS(SYSDATE, -1);

CREATE OR REPLACE VIEW V1
AS
SELECT OD.OD_CMCODE AS "CMCODE",
        CM.CM_NAME AS "CMNAME",
        OD.OD_CODE AS "ODCODE"
FROM OD INNER JOIN CM ON OD.OD_CMCODE = CM.CM_CODE; 

GRANT SELECT ON SAM.V1 TO FANA;
GRANT SELECT ON SAM.V1 TO NITO;
GRANT SELECT ON SAM.V1 TO SON;
GRANT SELECT ON SAM.V1 TO IU;

CREATE OR REPLACE VIEW V2
AS
SELECT OD.OD_CODE AS "ODCODE",
        GO.GO_NAME AS "GONAME",
        SUM(OT.OT_QTY * GO.GO_PRICE) AS "PRICE"
FROM OT INNER JOIN OD ON OD.OD_CODE = OT.OT_ODCODE
        INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
GROUP BY OD.OD_CODE, GO.GO_NAME;

GRANT SELECT ON SAM.V2 TO FANA;
GRANT SELECT ON SAM.V2 TO NITO;
GRANT SELECT ON SAM.V2 TO SON;
GRANT SELECT ON SAM.V2 TO IU;

SELECT CMCODE,
        CMNAME,
        COUNT(V1.ODCODE),
        SUM(PRICE)
FROM SAM.V1 INNER JOIN SAM.V2 ON V1.ODCODE = V2.ODCODE
GROUP BY CMCODE, CMNAME;

----------------------------------------------------------------------------------
CREATE OR REPLACE VIEW FV1
AS
SELECT OT.OT_GOCODE AS "GOCODE",
        GO.GO_NAME AS "GONAME",
        OT.OT_ODCODE AS "ODCODE",
        OT.OT_QTY AS "OTQTY",
        GO.GO_PRICE * OT.OT_QTY AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE;

SELECT GOCODE,
        GONAME,
        COUNT(ODCODE),
        SUM(PRICE)
FROM FV1
WHERE ODCODE LIKE '20201013' || '%'
GROUP BY GOCODE, GONAME;

SELECT GOCODE,
        GONAME,
        COUNT(ODCODE),
        SUM(PRICE)
FROM FV1
WHERE TO_CHAR(ODCODE, 'YYYYMMDD') >= '20201013'  AND TO_CHAR(ODCODE, 'YYYYMMDD') <= '20201015'
GROUP BY GOCODE, GONAME;

/*2020-10-27*/
/* ¿ùº° ¸ÅÃâ ÃßÀÌ 
    --------------------------------------
      ¸ÅÃâ¿ù        ÁÖ¹®°Ç¼ö       ¸ÅÃâ¾×
    --------------------------------------
*/
/*
SELECT TO_CHAR(OD_CODE, 'YYYYMM'),
        COUNT(OD_CODE)
FROM OD
GROUP BY TO_CHAR(OD_CODE, 'YYYYMM');
*/
SELECT TO_CHAR(FV1.ODCODE, 'YYYYMM') AS "MONTHS",
        TEM.COUNT,
        SUM(PRICE)
FROM FV1 INNER JOIN (SELECT TO_CHAR(OD_CODE, 'YYYYMM') AS "ODCODE",
                           COUNT(OD_CODE) AS "COUNT"
                    FROM OD
                    GROUP BY TO_CHAR(OD_CODE, 'YYYYMM')) TEM ON TO_CHAR(FV1.ODCODE, 'YYYYMM') = TEM.ODCODE
GROUP BY TO_CHAR(FV1.ODCODE, 'YYYYMM'), TEM.COUNT;

/* Æ¯Á¤ »óÇ°ÀÇ ¿ùº° ¸ÅÃâ ÃßÀÌ 
    --------------------------------------
      ¸ÅÃâ¿ù        ÁÖ¹®°Ç¼ö       ¸ÅÃâ¾×
    --------------------------------------
*/
SELECT TO_CHAR(ODCODE, 'YYYYMM') AS "MONTHS",
        COUNT(ODCODE) AS "COUNT",
        SUM(PRICE) AS "PRICE"
FROM FV1
WHERE GOCODE = 'G005'
GROUP BY TO_CHAR(ODCODE, 'YYYYMM');

/* Æ¯Á¤¿ùÀÇ º£½ºÆ® »óÇ°(ÆÇ¸Å°¹¼ö) ÇöÈ² 
    ----------------------------------------------------------
      ¸ÅÃâ¿ù    »óÇ°ÄÚµå    »óÇ°¸í    ÁÖ¹®°Ç¼ö    ÆÇ¸Å°¹¼ö    ¸ÅÃâ¾×
    ----------------------------------------------------------
*/
/*
SELECT TO_CHAR(ODCODE, 'YYYYMM') AS "MONTHS",
        GOCODE AS "GOCODE",
        GONAME AS "GONAME",
        COUNT(ODCODE) AS "ODCOUNT",
        SUM(OTQTY) AS "OTQTY",
        SUM(PRICE) AS "PRICE"
FROM FV1
GROUP BY TO_CHAR(ODCODE, 'YYYYMM'), GOCODE, GONAME;
*/
/*
SELECT TEM.MONTHS,
        MAX(TEM.OTQTY)
FROM (SELECT TO_CHAR(ODCODE, 'YYYYMM') AS "MONTHS",
            GOCODE AS "GOCODE",
            GONAME AS "GONAME",
            COUNT(ODCODE) AS "ODCOUNT",
            SUM(OTQTY) AS "OTQTY",
            SUM(PRICE) AS "PRICE"
    FROM FV1
    GROUP BY TO_CHAR(ODCODE, 'YYYYMM'), GOCODE, GONAME)TEM
GROUP BY TEM.MONTHS;
*/
/*
SELECT *
FROM (SELECT TO_CHAR(ODCODE, 'YYYYMM') AS "MONTHS",
            GOCODE AS "GOCODE",
            GONAME AS "GONAME",
            SUM(OTQTY) AS "OTQTY",
            SUM(PRICE) AS "PRICE"
    FROM FV1
    GROUP BY TO_CHAR(ODCODE, 'YYYYMM'), GOCODE, GONAME)TEM2
WHERE (TEM2.MONTHS, TEM2.OTQTY) IN(SELECT TEM1.MONTHS,
                                        MAX(TEM1.OTQTY)
                                FROM (SELECT TO_CHAR(ODCODE, 'YYYYMM') AS "MONTHS",
                                            GOCODE AS "GOCODE",
                                            GONAME AS "GONAME",
                                            SUM(OTQTY) AS "OTQTY",
                                            SUM(PRICE) AS "PRICE"
                                    FROM FV1
                                    GROUP BY TO_CHAR(ODCODE, 'YYYYMM'), GOCODE, GONAME)TEM1
                                GROUP BY TEM1.MONTHS);
*/                                
SELECT *
FROM (SELECT TO_CHAR(ODCODE, 'YYYYMM') AS "MONTHS",
            GOCODE AS "GOCODE",
            GONAME AS "GONAME",
            SUM(OTQTY) AS "OTQTY",
            SUM(PRICE) AS "PRICE"
    FROM FV1
    GROUP BY TO_CHAR(ODCODE, 'YYYYMM'), GOCODE, GONAME)TEM1
WHERE TEM1.MONTHS = '202009' AND
    (TEM1.MONTHS, TEM1.OTQTY) IN(SELECT TEM2.MONTHS,
                                        MAX(TEM2.OTQTY)
                                FROM (SELECT TO_CHAR(ODCODE, 'YYYYMM') AS "MONTHS",
                                            GOCODE AS "GOCODE",
                                            GONAME AS "GONAME",
                                            SUM(OTQTY) AS "OTQTY",
                                            SUM(PRICE) AS "PRICE"
                                    FROM FV1
                                    GROUP BY TO_CHAR(ODCODE, 'YYYYMM'), GOCODE, GONAME)TEM2
                                GROUP BY TEM2.MONTHS);
/* ½Ã°£´ëº° ¸ÅÃâÃßÀÌ 
    --------------------------------
      ½Ã°£     Æò±ÕÁÖ¹®°Ç¼ö  Æò±Õ¸ÅÃâ¾×
    --------------------------------
*/
/*
SELECT TO_CHAR(OD_CODE, 'YYYYMMDDHH24') AS "HOUR",
        COUNT(OD_CODE) AS "ODCOUNT"
FROM OD
GROUP BY TO_CHAR(OD_CODE, 'YYYYMMDDHH24');
*/
SELECT SUBSTR(TEM."HOUR", 9, 2) || '½Ã' AS "½Ã°£",
        ROUND(AVG(TEM.ODCOUNT), 1) AS "Æò±ÕÁÖ¹®°Ç¼ö",
        TO_CHAR(ROUND(AVG(FV1.PRICE), 1), '999,999.0') AS "Æò±Õ¸ÅÃâ¾×"
FROM FV1 INNER JOIN (SELECT TO_CHAR(OD_CODE, 'YYYYMMDDHH24') AS "HOUR",
                            COUNT(OD_CODE) AS "ODCOUNT"
                            FROM OD
                            GROUP BY TO_CHAR(OD_CODE, 'YYYYMMDDHH24'))TEM ON TO_CHAR(FV1.ODCODE, 'YYYYMMDDHH24') = TEM."HOUR"
GROUP BY SUBSTR(TEM."HOUR", 9, 2) || '½Ã';

/* ¿äÀÏº° ¸ÅÃâÃßÀÌ 
    --------------------------------
      ¿äÀÏ     Æò±ÕÁÖ¹®°Ç¼ö  Æò±Õ¸ÅÃâ¾×
    --------------------------------
*/
/*
SELECT TO_CHAR(OD_CODE, 'YYYYMMDD') AS "DATE",
        TO_CHAR(OD_CODE, 'DAY') AS "DAY",
        COUNT(OD_CODE) AS "ODCOUNT"
FROM OD
GROUP BY TO_CHAR(OD_CODE, 'YYYYMMDD'), TO_CHAR(OD_CODE, 'DAY');

SELECT TO_CHAR(ODCODE, 'YYYYMMDD') AS "DATE",
        TO_CHAR(ODCODE, 'DAY') AS "DAY",
        SUM(PRICE) AS "PRICE"
FROM FV1
GROUP BY TO_CHAR(ODCODE, 'YYYYMMDD'), TO_CHAR(ODCODE, 'DAY');
*/
SELECT TEM1."DAY" AS "¿äÀÏ",
        ROUND(AVG(TEM2.ODCOUNT),1) AS "Æò±ÕÁÖ¹®°Ç¼ö",
        TO_CHAR(ROUND(AVG(TEM1.PRICE),1), '999,999,999.0') AS "Æò±Õ¸ÅÃâ¾×"
FROM (SELECT TO_CHAR(ODCODE, 'YYYYMMDD') AS "DATE",
            TO_CHAR(ODCODE, 'DAY') AS "DAY",
            SUM(PRICE) AS "PRICE"
        FROM FV1
        GROUP BY TO_CHAR(ODCODE, 'YYYYMMDD'), TO_CHAR(ODCODE, 'DAY'))TEM1 INNER JOIN
    (SELECT TO_CHAR(OD_CODE, 'YYYYMMDD') AS "DATE",
            TO_CHAR(OD_CODE, 'DAY') AS "DAY",
            COUNT(OD_CODE) AS "ODCOUNT"
        FROM OD
        GROUP BY TO_CHAR(OD_CODE, 'YYYYMMDD'), TO_CHAR(OD_CODE, 'DAY'))TEM2 ON TEM1."DAY" = TEM2."DAY" AND TEM1."DATE" = TEM2."DATE"
GROUP BY TEM1."DAY";
/*
SELECT TO_CHAR(OD_CODE, 'YYYYMMDD') AS "DATE",
        TO_CHAR(OD_CODE, 'DAY') AS "DAY",
        COUNT(*) AS "ODCOUNT"
FROM OD
GROUP BY TO_CHAR(OD_CODE, 'YYYYMMDD'), TO_CHAR(OD_CODE, 'DAY');

SELECT TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD') AS "DATE",
        TO_CHAR(OT.OT_ODCODE, 'DAY') AS "DAY",
        SUM(OT.OT_QTY * GO.GO_PRICE) AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
GROUP BY TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD'), TO_CHAR(OT.OT_ODCODE, 'DAY');
*/
SELECT TEM1."DAY" AS "¿äÀÏ",
        ROUND(AVG(TEM1.ODCOUNT), 1) AS "Æò±ÕÁÖ¹®°Ç¼ö",
        TO_CHAR(ROUND(AVG(TEM2.PRICE), 1), '999,999,999.0') AS "Æò±Õ¸ÅÃâ¾×"
FROM (SELECT TO_CHAR(OD_CODE, 'YYYYMMDD') AS "DATE",
            TO_CHAR(OD_CODE, 'DAY') AS "DAY",
            COUNT(*) AS "ODCOUNT"
        FROM OD
        GROUP BY TO_CHAR(OD_CODE, 'YYYYMMDD'), TO_CHAR(OD_CODE, 'DAY')) TEM1
        INNER JOIN (SELECT TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD') AS "DATE",
                            TO_CHAR(OT.OT_ODCODE, 'DAY') AS "DAY",
                            SUM(OT.OT_QTY * GO.GO_PRICE) AS "PRICE"
                    FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
                    GROUP BY TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD'), TO_CHAR(OT.OT_ODCODE, 'DAY')) TEM2 ON TEM1."DAY" = TEM2."DAY" AND TEM1."DATE" = TEM2."DATE"
GROUP BY TEM1."DAY";
-----------------------------------------------------------------------------------------
/* 2020-10-28 */

/* 1. Æ¯Á¤ »óÁ¡ÀÇ Á÷¿øÀÇ ·Î±×ÀÎ°ú ·Î±×¾Æ¿ô È½¼ö ±â·Ï Ãâ·Â 
    ---------------------------------------------
      »ç¿øÄÚµå   »ç¿ø¸í   ·Î±×ÀÎÈ½¼ö   ·Î±×¾Æ¿ô È½¼ö
    ---------------------------------------------
*/ 
/*
SELECT "EM".EM_STCODE AS "STCODE",
        "EM".EM_CODE AS "EMCODE",
        COUNT(HI.HI_STATE) AS "LOGINCNT"
FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
WHERE HI.HI_STATE = 1
GROUP BY "EM".EM_STCODE, "EM".EM_CODE, "EM".EM_NAME;

SELECT "EM".EM_STCODE AS "STCODE",
        "EM".EM_CODE AS "EMCODE",
        COUNT(HI.HI_STATE) AS "LOGOUTCNT"
FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
WHERE HI.HI_STATE = -1
GROUP BY "EM".EM_STCODE, "EM".EM_CODE, "EM".EM_NAME;
*/

INSERT INTO HI(HI_EMSTCODE, HI_EMCODE, HI_ACCESSDATE, HI_STATE)
VALUES('S001', 'E103', DEFAULT, 1);
ROLLBACK;

SELECT "EM".EM_CODE AS "EMCODE",
        "EM".EM_NAME AS "EMNAME",
        COALESCE(TEMP1.LOGINCNT, 0) AS "LOGINCNT",
        COALESCE(TEMP2.LOGOUTCNT, 0) AS "LOGOUTCNT"
FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
        LEFT OUTER JOIN (SELECT "EM".EM_STCODE AS "STCODE",
                                "EM".EM_CODE AS "EMCODE",
                                COUNT(HI.HI_STATE) AS "LOGINCNT"
                        FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
                        WHERE HI.HI_STATE = 1
                        GROUP BY "EM".EM_STCODE, "EM".EM_CODE, "EM".EM_NAME)TEMP1 ON "EM".EM_STCODE = TEMP1.STCODE AND "EM".EM_CODE = TEMP1.EMCODE
        LEFT OUTER JOIN (SELECT "EM".EM_STCODE AS "STCODE",
                                "EM".EM_CODE AS "EMCODE",
                                COUNT(HI.HI_STATE) AS "LOGOUTCNT"
                        FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
                        WHERE HI.HI_STATE = -1
                        GROUP BY "EM".EM_STCODE, "EM".EM_CODE, "EM".EM_NAME)TEMP2 ON "EM".EM_STCODE = TEMP2.STCODE AND "EM".EM_CODE = TEMP2.EMCODE
WHERE "EM".EM_STCODE = 'S001'
GROUP BY "EM".EM_CODE, "EM".EM_NAME, COALESCE(TEMP1.LOGINCNT, 0), COALESCE(TEMP2.LOGOUTCNT, 0);

/* 2. Æ¯Á¤ »óÁ¡ÀÇ ¸ðµç Á÷¿øÁß ·Î±×ÀÎ È½¼ö°¡ °¡Àå ¸¹Àº Á÷¿øÀÇ Á¤º¸ Ãâ·Â 
    ----------------------------------------
      »ç¿øÄÚµå   »ç¿ø¸í   ·Î±×ÀÎÈ½¼ö   »ç¿øµî±Þ
    ----------------------------------------
*/ 
/*
SELECT "EM".EM_CODE,
        "EM".EM_NAME,
        COUNT(HI.HI_STATE),
        "EM".EM_LEVEL
FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
GROUP BY "EM".EM_CODE, "EM".EM_NAME, "EM".EM_LEVEL;

SELECT "EM".EM_STCODE, 
        "EM".EM_CODE,
        "EM".EM_NAME,
        COUNT(HI.HI_STATE),
        "EM".EM_LEVEL
FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
WHERE HI.HI_STATE = 1
GROUP BY "EM".EM_STCODE, "EM".EM_CODE, "EM".EM_NAME, "EM".EM_LEVEL;

SELECT "EM".EM_STCODE,
        "EM".EM_CODE,
        COUNT(HI.HI_STATE)
FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
WHERE HI.HI_STATE = 1
GROUP BY "EM".EM_STCODE, "EM".EM_CODE;

SELECT TEMP.STCODE,
        MAX(LOGINCNT)
FROM (SELECT "EM".EM_STCODE AS "STCODE", 
            "EM".EM_CODE AS "EMCODE",
            COUNT(HI.HI_STATE) AS "LOGINCNT"
    FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
    WHERE HI.HI_STATE = 1
    GROUP BY "EM".EM_STCODE, "EM".EM_CODE)TEMP
GROUP BY TEMP.STCODE;
*/

SELECT "EM".EM_CODE AS "EMCODE",
        "EM".EM_NAME AS "EMNAME",
        COALESCE(TEMP1.LOGINCNT, 0) AS "LOGINCNT",
        "EM".EM_LEVEL AS "EMLEVEL"
FROM (SELECT "EM".EM_STCODE AS "STCODE",
             "EM".EM_CODE AS "EMCODE",
             COUNT(HI.HI_STATE) AS "LOGINCNT"
      FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
      WHERE HI.HI_STATE = 1
      GROUP BY "EM".EM_STCODE, "EM".EM_CODE)TEMP1 RIGHT OUTER JOIN "EM" ON "EM".EM_CODE = TEMP1.EMCODE AND "EM".EM_STCODE = TEMP1.STCODE
WHERE ("EM".EM_STCODE, COALESCE(TEMP1.LOGINCNT, 0)) IN (SELECT "EM".EM_STCODE,
                                                                COALESCE(MAX(LOGINCNT), 0)
                                                        FROM (SELECT "EM".EM_STCODE AS "STCODE", 
                                                                    "EM".EM_CODE AS "EMCODE",
                                                                     COUNT(HI.HI_STATE) AS "LOGINCNT"
                                                              FROM HI RIGHT OUTER JOIN "EM" ON HI.HI_EMSTCODE = "EM".EM_STCODE AND HI.HI_EMCODE = "EM".EM_CODE
                                                              WHERE HI.HI_STATE = 1
                                                                GROUP BY "EM".EM_STCODE, "EM".EM_CODE)TEMP2 RIGHT OUTER JOIN "EM" ON TEMP2.STCODE = "EM".EM_STCODE AND TEMP2.EMCODE = "EM".EM_CODE
                                                         GROUP BY "EM".EM_STCODE) AND
        "EM".EM_STCODE = 'S004'
GROUP BY "EM".EM_STCODE, "EM".EM_CODE, "EM".EM_NAME, COALESCE(TEMP1.LOGINCNT, 0), "EM".EM_LEVEL;

/* 3. Æ¯Á¤ »óÁ¡ÀÇ ¸ðµç Á÷¿øÀ» ´ë»óÀ¸·Î Á÷¿øº° ÆÇ¸Å½ÇÀûÀ» Ãâ·Â
    ----------------------------------------
      »ç¿øÄÚµå   »ç¿ø¸í   ÁÖ¹®°Ç¼ö    ¸ÅÃâ¾×
    ----------------------------------------
*/ 
/*
SELECT OD.OD_CODE,
        "EM".EM_CODE,
        "EM".EM_NAME,
        COUNT(OD.OD_CODE)
FROM OD RIGHT OUTER JOIN "EM" ON OD.OD_EMCODE = "EM".EM_CODE
GROUP BY OD.OD_CODE, "EM".EM_CODE,"EM".EM_NAME;

SELECT OT.OT_ODCODE,
        SUM(OT.OT_QTY * GO.GO_PRICE)
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
GROUP BY OT.OT_ODCODE;

SELECT OT.OT_ODCODE,
        OT.OT_GOCODE,
        GO.GO_NAME,
        OT.OT_QTY,
        GO.GO_PRICE,
        OT.OT_QTY * GO.GO_PRICE
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE;
*/
SELECT TEMP2.EMCODE AS "EMCODE",
        TEMP2.EMNAME AS "EMNAME",
        SUM(TEMP2.ODCOUNT) AS "ODCOUNT",
        TO_CHAR(SUM(COALESCE(TEMP1.PRICE, 0)), '999,999,999') AS "PRICE"
FROM (SELECT OT.OT_ODCODE AS "ODCODE",
            SUM(OT.OT_QTY * GO.GO_PRICE) AS "PRICE"
        FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
        GROUP BY OT.OT_ODCODE)TEMP1 RIGHT OUTER JOIN
    (SELECT OD.OD_CODE AS "ODCODE",
            "EM".EM_STCODE AS "STCODE",
            "EM".EM_CODE AS "EMCODE",
            "EM".EM_NAME AS "EMNAME",
            COUNT(OD.OD_CODE) AS "ODCOUNT"
        FROM OD RIGHT OUTER JOIN "EM" ON OD.OD_EMCODE = "EM".EM_CODE
        GROUP BY OD.OD_CODE, "EM".EM_STCODE, "EM".EM_CODE,"EM".EM_NAME)TEMP2 ON TEMP1.ODCODE = TEMP2.ODCODE
WHERE TEMP2.STCODE = 'S001'
GROUP BY TEMP2.EMCODE, TEMP2.EMNAME; 


SELECT TEMP2.EMCODE AS "EMCODE",
        TEMP2.EMNAME AS "EMNAME",
        SUM(TEMP2.ODCOUNT) AS "ODCOUNT",
        TO_CHAR(SUM(COALESCE(TEMP1.PRICE, 0)), '999,999,999') AS "PRICE"
FROM (SELECT ODCODE AS "ODCODE",
            SUM(PRICE) AS "PRICE"
        FROM FV1
        GROUP BY ODCODE)TEMP1 RIGHT OUTER JOIN
    (SELECT OD.OD_CODE AS "ODCODE",
            "EM".EM_STCODE AS "STCODE",
            "EM".EM_CODE AS "EMCODE",
            "EM".EM_NAME AS "EMNAME",
            COUNT(OD.OD_CODE) AS "ODCOUNT"
        FROM OD RIGHT OUTER JOIN "EM" ON OD.OD_EMCODE = "EM".EM_CODE
        GROUP BY OD.OD_CODE, "EM".EM_STCODE, "EM".EM_CODE,"EM".EM_NAME)TEMP2 ON TEMP1.ODCODE = TEMP2.ODCODE
WHERE TEMP2.STCODE = 'S001'
GROUP BY TEMP2.EMCODE, TEMP2.EMNAME; 

/* 4. ¸ðµç »óÇ°ÀÇ Á¤º¸ Ãâ·Â
    --------------------------------------------
      »óÇ°ÄÚµå   »óÇ°¸í   °¡°Ý    Àç°í     À¯Åë±âÇÑ
    --------------------------------------------
*/ 
/*
SELECT GO.GO_CODE,
        GO.GO_NAME,
        GO.GO_PRICE,
        SC.SC_STOCKS,
        TO_CHAR(SC.SC_EXPIRE)
FROM SC RIGHT OUTER JOIN GO ON SC.SC_GOCODE = GO.GO_CODE;
*/
SELECT GO.GO_CODE AS "GOCODE",
        GO.GO_NAME AS "GONAME",
        GO.GO_PRICE AS "PRICE",
        SUM(COALESCE(SC.SC_STOCKS, 0)) AS "STOCK",
        COALESCE(TO_CHAR(SC.SC_EXPIRE, 'YYYYMMDD'), '00000000') AS "EXPIRE"
FROM SC RIGHT OUTER JOIN GO ON SC.SC_GOCODE = GO.GO_CODE
GROUP BY GO.GO_CODE, GO.GO_NAME, GO.GO_PRICE, COALESCE(TO_CHAR(SC.SC_EXPIRE, 'YYYYMMDD'), '00000000');
/* 5. 4ÀÇ °á°úÁß ÆÇ¸Å°¡´ÉÇÑ »óÇ°Á¤º¸¸¦ Ãâ·Â
    --------------------------------------------
      »óÇ°ÄÚµå   »óÇ°¸í   °¡°Ý    Àç°í     À¯Åë±âÇÑ
    --------------------------------------------
*/ 
SELECT GO.GO_CODE AS "GOCODE",
        GO.GO_NAME AS "GONAME",
        GO.GO_PRICE AS "PRICE",
        SUM(COALESCE(SC.SC_STOCKS, 0)) AS "STOCK",
        COALESCE(TO_CHAR(SC.SC_EXPIRE, 'YYYYMMDD'), '00000000') AS "EXPIRE"
FROM SC RIGHT OUTER JOIN GO ON SC.SC_GOCODE = GO.GO_CODE
WHERE SC.SC_STOCKS > 0 AND SC.SC_EXPIRE >= SYSDATE
GROUP BY GO.GO_CODE, GO.GO_NAME, GO.GO_PRICE, COALESCE(TO_CHAR(SC.SC_EXPIRE, 'YYYYMMDD'), '00000000');
----------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW FV2
AS
SELECT OT.OT_GOCODE AS "GOCODE",
        GO.GO_NAME AS "GONAME",
        TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD') AS "ODCODE",
        COUNT(OT.OT_ODCODE) AS "COUNT",
        SUM(OT.OT_QTY) AS "OTQTY",
        SUM(GO.GO_PRICE * OT.OT_QTY) AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
GROUP BY TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD'), OT.OT_GOCODE, GO.GO_NAME;

SELECT GOCODE,
        GONAME,
        COUNT,
        PRICE
FROM FV2
WHERE ODCODE LIKE '20201013' || '%';

SELECT GOCODE,
        GONAME,
        COUNT,
        PRICE
FROM FV2
WHERE ODCODE >= '20201013' AND ODCODE <= '20201015';

SELECT TO_CHAR(OD_CODE, 'YYYYMM'),
        COUNT(OD_CODE)
FROM OD
GROUP BY TO_CHAR(OD_CODE, 'YYYYMM');

SELECT SUBSTR(FV2.ODCODE, 1, 6) AS "MONTHS",
        TEM.COUNT,
        SUM(PRICE)
FROM FV2 INNER JOIN (SELECT TO_CHAR(OD_CODE, 'YYYYMM') AS "ODCODE",
                           COUNT(OD_CODE) AS "COUNT"
                    FROM OD
                    GROUP BY TO_CHAR(OD_CODE, 'YYYYMM')) TEM ON SUBSTR(FV2.ODCODE, 1, 6) = TEM.ODCODE
GROUP BY SUBSTR(FV2.ODCODE, 1, 6), TEM.COUNT;

CREATE OR REPLACE VIEW TEM2
AS
SELECT SUBSTR(ODCODE, 1, 6) AS "MONTHS",
        GOCODE,
        GONAME,
        SUM(COUNT) AS "COUNT",
        SUM(OTQTY) AS "QTY",
        SUM(PRICE) AS "PRICE"
FROM FV2
GROUP BY SUBSTR(ODCODE, 1, 6), GOCODE, GONAME;

SELECT MONTHS,
        MAX(QTY)
FROM TEM2
GROUP BY MONTHS;

SELECT *
FROM TEM2
WHERE (MONTHS, QTY) IN(SELECT MONTHS,
                                MAX(QTY)
                        FROM TEM2
                        GROUP BY MONTHS);

-----------------------------------------------------------------------------
SELECT OT.OT_GOCODE,
        GO.GO_NAME,
        COUNT(OT.OT_ODCODE),
        SUM(OT.OT_QTY * GO.GO_PRICE)
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD') = '20201013'
GROUP BY OT.OT_GOCODE, GO.GO_NAME;

SELECT OT.OT_GOCODE,
        GO.GO_NAME,
        COUNT(OT.OT_ODCODE),
        SUM(OT.OT_QTY * GO.GO_PRICE)
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE TO_CHAR(OT.OT_ODCODE, 'YYYYMM') = '202009'
GROUP BY OT.OT_GOCODE, GO.GO_NAME;

CREATE OR REPLACE VIEW DAILYSALEINFO
AS
SELECT OT.OT_ODCODE AS "ODCODE",
        OT.OT_GOCODE AS "GOCODE",
        GO.GO_NAME AS "GONAME",
        OT.OT_ODCODE AS "SALECOUNT",
        OT.OT_QTY * GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE;

DROP VIEW DAILYSALEINFO;

-----------------------------------------------------------------------------
ALTER TABLE SAM.HISTORY
MODIFY HI_STATE DEFAULT 0;

SELECT COUNT(*)
FROM EM
WHERE EM_CODE = 'E101' AND EM_STCODE = 'S001';

SELECT COUNT(*)
FROM EM
WHERE EM_STCODE = 'S001' AND EM_CODE = 'E101' AND EM_PWD = '1111';

SELECT HI_EMSTCODE AS "STCODE",
        HI_EMCODE AS "EMCODE",
        SUM(HI_STATE) AS "STATE"
FROM HI
GROUP BY HI_EMSTCODE, HI_EMCODE;

INSERT INTO HI(HI_EMSTCODE, HI_EMCODE, HI_ACCESSDATE, HI_STATE)
VALUES('S001', 'E101', DEFAULT, 1);
INSERT INTO HI(HI_EMSTCODE, HI_EMCODE, HI_ACCESSDATE, HI_STATE)
VALUES('S001', 'E101', DEFAULT, -1);

SELECT * FROM HI;

SELECT ST.ST_NAME AS "STNAME",
        "EM".EM_NAME AS "EMNAME",
        "EM".EM_LEVEL AS "EMLEVEL",
        MAX(HI.HI_ACCESSDATE) AS "HIACCESSDATE",
        HI.HI_EMSTCODE AS "STCODE",
        HI.HI_EMCODE AS "EMCODE"
FROM HI INNER JOIN "EM" ON HI.HI_EMCODE = "EM".EM_CODE AND HI.HI_EMSTCODE = "EM".EM_STCODE
        INNER JOIN ST ON HI.HI_EMSTCODE = ST.ST_CODE
WHERE HI.HI_STATE = 1
        AND HI.HI_EMSTCODE = 'S001'
        AND HI.HI_EMCODE = 'E101'
GROUP BY ST.ST_NAME, "EM".EM_NAME, "EM".EM_LEVEL, HI.HI_EMSTCODE, HI.HI_EMCODE;
                        
SELECT SC.SC_GOCODE AS "GOCODE",
        GO.GO_NAME AS "GONAME",
        GO.GO_PRICE AS "GOPRICE",
        SUM(SC.SC_STOCKS) AS "STOCK",
        SC.SC_EXPIRE AS "EXPIRE"
FROM SC INNER JOIN GO ON SC.SC_GOCODE = GO.GO_CODE
GROUP BY SC.SC_GOCODE, GO.GO_NAME, GO.GO_PRICE, SC.SC_EXPIRE;

SELECT GOCODE,
        GONAME,
        GOPRICE,
        MAX(EXPIRE) AS "EXPIRE"
FROM (SELECT SC.SC_GOCODE AS "GOCODE",
                GO.GO_NAME AS "GONAME",
                GO.GO_PRICE AS "GOPRICE",
                SUM(SC.SC_STOCKS) AS "STOCK",
                SC.SC_EXPIRE AS "EXPIRE"
        FROM SC INNER JOIN GO ON SC.SC_GOCODE = GO.GO_CODE
        GROUP BY SC.SC_GOCODE, GO.GO_NAME, GO.GO_PRICE, SC.SC_EXPIRE)
WHERE GOCODE = 'G001' AND STOCK > 0
GROUP BY GOCODE, GONAME, GOPRICE;

SELECT TO_CHAR(MAX(OD_CODE), 'YYYYMMDDHH24MISS') AS "ODCODE"
FROM OD
WHERE OD_EMSTCODE = 'S001' AND OD_EMCODE = 'E101' AND OD_CMCODE = 'CM002' AND OD_STATE = 'P';

/*
2020-10-30

CREATE OR REPLACE TRIGGER UPD_STOCK
AFTER INSERT ON SAM.ORDERDETAIL
FOR EACH ROW

DECLARE

BEGIN
    UPDATE SC SET SC_STOCKS = (SC_STOCKS - :NEW.OT_QTY) WHERE SC_GOCODE = :NEW.OT_GOCODE;
END UPD_STOCK;

*/

/*
2020-11-02

GRANT CREATE PROCEDURE TO FANA;
GRANT CREATE PROCEDURE TO NITO;
GRANT CREATE PROCEDURE TO SON;
GRANT CREATE PROCEDURE TO IU;

CREATE OR REPLACE PROCEDURE REG_ORDER(
STCODE IN OD.OD_EMSTCODE%TYPE,
EMCODE IN OD.OD_EMCODE%TYPE,
CMCODE IN OD.OD_CMCODE%TYPE,
ODSTATE IN OD.OD_STATE%TYPE,
ODCODE OUT NVARCHAR2)
IS

BEGIN
INSERT INTO OD(OD_CODE, OD_EMSTCODE, OD_EMCODE, OD_CMCODE, OD_STATE)
VALUES(DEFAULT, STCODE, EMCODE, CMCODE, ODSTATE);

SELECT TO_CHAR(MAX(OD_CODE), 'YYYYMMDDHH24MISS') INTO ODCODE
FROM OD
WHERE OD_EMSTCODE = STCODE AND OD_EMCODE = EMCODE AND OD_CMCODE = CMCODE AND OD_STATE = ODSTATE;

END REG_ORDER;

SET SERVEROUTPUT ON;

DECLARE
    ODCODE NVARCHAR2(14);
BEGIN
    REG_ORDER('S001', 'E101', 'CM001', 'P', ODCODE);
    DBMS_OUTPUT.PUT_LINE('ODCODE : ' || ODCODE);
END;

CALL REG_ORDER(?, ?, ?, ?, ODCODE)
--------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE REG_OT(
    ODCODE IN NVARCHAR2,
    GOCODE IN OT.OT_GOCODE%TYPE,
    QTY IN OT.OT_QTY%TYPE,
    OTSTATE IN OT.OT_STATE%TYPE)
IS

BEGIN
    INSERT INTO OT(OT_ODCODE, OT_GOCODE, OT_QTY, OT_STATE)
    VALUES(TO_DATE(ODCODE, 'YYYYMMDDHH24MISS'), GOCODE, QTY, OTSTATE);
END REG_OT;

SET SERVEROUTPUT ON;

DECLARE
    ODCODE NCHAR(14) := '20201102120205';
    GOCODE NCHAR(4) := 'G001';
    QTY NUMBER := 3;
    OTSTATE NCHAR(1) := 'P';
BEGIN
    REG_OT(ODCODE, GOCODE, QTY, OTSTATE);
    
    SELECT OT_ODCODE,
            OT_GOCODE,
            OT_QTY,
            OT_STATE
    INTO ODCODE,
        GOCODE,
        QTY,
        OTSTATE
    FROM OT
    WHERE OT_ODCODE = '20201102120205';
    
    DBMS_OUTPUT.PUT_LINE('ODOCDE : ' || ODCODE);
    DBMS_OUTPUT.PUT_LINE('GOOCDE : ' || GOCODE);
    DBMS_OUTPUT.PUT_LINE('QTY : ' || QTY);
    DBMS_OUTPUT.PUT_LINE('OTSTATE : ' || OTSTATE);
END;

*/

ROLLBACK;

SELECT *
FROM SC;

SELECT *
FROM OD;

SELECT *
FROM OT;

SELECT *
FROM CM;
--------------------------------------------------------------------
SELECT * FROM USER_TAB_PRIVS_RECD;
