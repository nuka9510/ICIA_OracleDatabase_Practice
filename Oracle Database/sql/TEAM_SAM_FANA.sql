SELECT * FROM DBA_USERS;

DROP USER RE CASCADE;
DROP USER RAM CASCADE;
DROP USER ZERO CASCADE;
DROP USER UKJW CASCADE;
DROP USER KJW CASCADE;

CREATE USER SAM
IDENTIFIED BY "0000";

GRANT DBA TO SAM;

INSERT INTO ST(ST_CODE, ST_NAME, ST_ADDR)
VALUES('S001', 'SAM_MART_J', 'ÀÍ»ê½Ã ¿µµîµ¿');
INSERT INTO ST(ST_CODE, ST_NAME, ST_ADDR)
VALUES('S002', 'SAM_MART_H', 'ÀÎÃµ±¤¿ª½Ã ºÎÆò±¸');
INSERT INTO ST(ST_CODE, ST_NAME, ST_ADDR)
VALUES('S003', 'SAM_MART_Y', 'ÀÎÃµ±¤¿ª½Ã ¹ÌÃßÈ¦±¸');
INSERT INTO ST(ST_CODE, ST_NAME, ST_ADDR)
VALUES('S004', 'SAM_MART_M', 'ÀÎÃµ±¤¿ª½Ã ³²µ¿±¸');

INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S001', 'E101', '1111', '±èÁ¾¿ø', 'M');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S001', 'E102', '1111', 'ÇÏÇö¼ö', 'A' );
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S001', 'E103', '1111', 'À¯¿µ¹Î', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S001', 'E104', '1111', '±è¹Î±â', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S002', 'E201', '2222', '±èÁ¾¿ø', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S002', 'E202', '2222', 'ÇÏÇö¼ö', 'M');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S002', 'E203', '2222', 'À¯¿µ¹Î', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S002', 'E204', '2222', '±è¹Î±â', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S003', 'E301', '3333', '±èÁ¾¿ø', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S003', 'E302', '3333', 'ÇÏÇö¼ö', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S003', 'E303', '3333', 'À¯¿µ¹Î', 'M');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S003', 'E304', '3333', '±è¹Î±â', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S004', 'E401', '4444', '±èÁ¾¿ø', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S004', 'E402', '4444', 'ÇÏÇö¼ö', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S004', 'E403', '4444', 'À¯¿µ¹Î', 'A');
INSERT INTO "EM"(EM_STCODE, EM_CODE, EM_PWD, EM_NAME, EM_LEVEL)
VALUES('S004', 'E404', '4444', '±è¹Î±â', 'M');

SELECT EM_STCODE AS "STCODE",
    EM_CODE AS "EMCODE",
    EM_NAME AS "EMNAME",
    EM_LEVEL AS "EMLEVEL"
FROM "EM"
WHERE EM_STCODE = 'S001' AND EM_CODE = 'E102';

SELECT GO_CODE AS "GOCODE",
    GO_NAME AS "GONAME",
    GO_PRICE AS "GOPRICE",
    GO_COMMENTS AS "GOCOMMENTS"
FROM GO;

SELECT GO_CODE AS "GOCODE",
    GO_NAME AS "GONAME",
    GO_PRICE AS "GOPRICE",
    GO_COMMENTS AS "GOCOMMENTS"
FROM GO
WHERE GO_CODE = 'G008' OR GO_CODE = 'G005' OR GO_CODE = 'G022';

SELECT GO_CODE AS "GOCODE",
    GO_NAME AS "GONAME",
    GO_PRICE AS "GOPRICE",
    GO_COMMENTS AS "GOCOMMENTS"
FROM GO
WHERE GO_CODE IN(SELECT OT_GOCODE
                FROM OT);

SELECT *
FROM OT
WHERE OT_ODCODE LIKE '20201013' || '%';

SELECT ABS(65), ABS(-65)
FROM DUAL;

SELECT CEIL(1.956), FLOOR(1.956)
FROM DUAL;

SELECT 7/2, MOD(7, 2)
FROM DUAL;

SELECT ROUND(21.637, 0), ROUND(21.637, 1), ROUND(21.637, -1)
FROM DUAL;

SELECT ROUND(21.637, 0), TRUNC(21.637, 0)
FROM DUAL;

SELECT CONCAT(CONCAT('TEAM', 'SAM'), 'FANA'), 'TEAM' || 'SAM' || 'FANA'
FROM DUAL;

SELECT INSTR('TEADFSLIELSFDLKFJTEADISKETEA', 'TEA', 1),
    INSTR('TEADFSLIELSFDLKFJTEADISKETEA', 'TEA', 1, 2),
    INSTR('TEADFSLIELSFDLKFJTEADISKETEA', 'TEA', 1, 3),
    INSTR('TEADFSLIELSFDLKFJTEADISKETEA', 'TEA', 1, 4)
FROM DUAL;

SELECT TO_CHAR('1000000000000', 'L9,999,999,999,990'),
    TO_CHAR('0', 'L9,999,999,999,900'),
    TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),
    TO_DATE('201023095700', 'YYMMDDHH24MISS')
FROM DUAL;

SELECT SYSDATE AS "¿À´Ã",
    SYSDATE + 3 AS "3ÀÏ µÚ",
    ADD_MONTHS(SYSDATE, 3) AS "3°³¿ù µÚ",
    MONTHS_BETWEEN(SYSDATE, ADD_MONTHS(SYSDATE, 3)) AS "¿À´Ã - 3°³¿ù µÚ",
    MONTHS_BETWEEN(ADD_MONTHS(SYSDATE, 3), SYSDATE) AS "3°³¿ù µÚ - ¿À´Ã",
    LAST_DAY(ADD_MONTHS(SYSDATE, 3)) AS "3°³¿ù µÚ ¸¶Áö¸· ³¯",
    NEXT_DAY(ADD_MONTHS(SYSDATE, 3), 7) AS "3°³¿ù µÚ ÀÏ¿äÀÏ"
FROM DUAL;

SELECT GO.GO_CODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    GO.GO_PRICE AS "GOPRICE",
    SC.SC_EXPIRE AS "SCEXPIRE"
FROM GO INNER JOIN SC ON GO.GO_CODE = SC.SC_GOCODE;

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE = 'R';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE = 'R' AND OT.OT_ODCODE = '20201003113318';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE = 'R' AND OT.OT_GOCODE = 'G003';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE = 'R' AND (OT.OT_GOCODE = 'G003' OR OT.OT_GOCODE = 'G007');

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE != 'R';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE != 'R' AND OT.OT_ODCODE = '20201003113318';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE != 'R' AND OT.OT_GOCODE = 'G003';

SELECT OT.OT_ODCODE AS "ODCODE",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY*GO.GO_PRICE AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
WHERE OT.OT_STATE != 'R' AND (OT.OT_GOCODE = 'G003' OR OT.OT_GOCODE = 'G007');

CREATE OR REPLACE VIEW ORDERINFO
AS
SELECT OT.OT_ODCODE AS "ODCODE",
    "EM".EM_STCODE AS "STCODE",
    ST.ST_NAME AS "STNAME",
    OD.OD_EMCODE AS "EMCODE",
    "EM".EM_NAME AS "EMNAME",
    OT.OT_GOCODE AS "GOCODE",
    GO.GO_NAME AS "GONAME",
    OT.OT_QTY AS "OTQTY",
    GO.GO_PRICE AS "GOPRICE",
    OT.OT_QTY * GO.GO_PRICE AS "PRICE",
    OT.OT_STATE AS "OTSTATE"
FROM OT INNER JOIN OD ON OT.OT_ODCODE = OD.OD_CODE
        INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
        INNER JOIN "EM" ON OD.OD_EMCODE = "EM".EM_CODE
        INNER JOIN ST ON "EM".EM_STCODE = ST.ST_CODE;

CREATE OR REPLACE VIEW EMPLOYEEINFO
AS
SELECT "EM".EM_STCODE AS "STCODE",
    ST.ST_NAME AS "STNAME",
    ST.ST_ADDR AS "STADDR",
    "EM".EM_CODE AS "EMCODE",
    "EM".EM_PWD AS "EMPWD",
    "EM".EM_NAME AS "EMNAME",
    "EM".EM_LEVEL AS "EMLEVEL"
FROM "EM" INNER JOIN ST ON "EM".EM_STCODE = ST.ST_CODE;

SELECT STNAME,
    EMNAME,
    EMLEVEL
FROM SAM.EMPLOYEEINFO
WHERE STCODE = 'S001';

SELECT STNAME,
    EMNAME,
    EMLEVEL
FROM SAM.EMPLOYEEINFO
WHERE EMCODE = 'E101';

SELECT STNAME,
    EMNAME,
    ODCODE,
    GONAME,
    OTQTY,
    GOPRICE,
    PRICE
FROM SAM.ORDERINFO
WHERE EMCODE = 'E101' AND ODCODE >= (ADD_MONTHS(SYSDATE, -1));

SELECT ODCODE,
    GONAME,
    OTQTY,
    GOPRICE,
    PRICE
FROM SAM.ORDERINFO
WHERE GOCODE = 'G005' AND ODCODE >= (ADD_MONTHS(SYSDATE, -1));

SELECT *
FROM SAM.ORDERINFO
WHERE OTSTATE != 'R' AND (GOCODE = 'G003' OR GOCODE = 'G007');

SELECT OI.OT_ODCODE AS "ODCDE",
        OI.GO_NAME AS "GONAME",
        OI.OT_QTY AS "OTQTY",
        OI.GO_PRICE * OI.OT_QTY AS "PRICE"
FROM (SELECT OT.OT_GOCODE,
            OT.OT_ODCODE,
            OT.OT_QTY,
            GO.GO_NAME,
            GO.GO_PRICE
        FROM OT INNER JOIN GO ON GO.GO_CODE = OT.OT_GOCODE) OI
WHERE OI.OT_GOCODE = 'G005' AND OI.OT_ODCODE >= ADD_MONTHS(SYSDATE, -1);

SELECT SAM.EMPLOYEEINFO.STNAME,
        SAM.EMPLOYEEINFO.EMNAME,
        OD.OD_CODE AS "ODCODE",
        GO.GO_NAME AS "GONAME",
        OT.OT_QTY AS "OTQTY",
        GO.GO_PRICE * OT.OT_QTY AS "PRICE"
FROM OT INNER JOIN OD ON OD.OD_CODE = OT.OT_ODCODE
    INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
    INNER JOIN SAM.EMPLOYEEINFO ON OD.OD_EMCODE = SAM.EMPLOYEEINFO.EMCODE AND OD.OD_EMSTCODE = SAM.EMPLOYEEINFO.STCODE
WHERE SAM.EMPLOYEEINFO.EMCODE = 'E203' AND OD.OD_CODE >= ADD_MONTHS(SYSDATE, -1);

CREATE OR REPLACE VIEW V1
AS
SELECT OD.OD_CMCODE AS "CMCODE",
        CM.CM_NAME AS "CMNAME",
        OD.OD_CODE AS "ODCODE"
FROM OD INNER JOIN CM ON OD.OD_CMCODE = CM.CM_CODE; 

GRANT SELECT ON SAM.V1 TO FANA;
GRANT SELECT ON SAM.V1 TO NITO;
GRANT SELECT ON SAM.V1 TO SON;
GRANT SELECT ON SAM.V1 TO IU;

CREATE OR REPLACE VIEW V2
AS
SELECT OD.OD_CODE AS "ODCODE",
        GO.GO_NAME AS "GONAME",
        SUM(OT.OT_QTY * GO.GO_PRICE) AS "PRICE"
FROM OT INNER JOIN OD ON OD.OD_CODE = OT.OT_ODCODE
        INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
GROUP BY OD.OD_CODE;

GRANT SELECT ON SAM.V2 TO FANA;
GRANT SELECT ON SAM.V2 TO NITO;
GRANT SELECT ON SAM.V2 TO SON;
GRANT SELECT ON SAM.V2 TO IU;

SELECT CMCODE,
        CMNAME,
        COUNT(V1.ODCODE),
        SUM(PRICE)
FROM SAM.V1 INNER JOIN SAM.V2 ON V1.ODCODE = V2.ODCODE
GROUP BY CMCODE, CMNAME;

CREATE OR REPLACE VIEW FV1
AS
SELECT OT.OT_GOCODE AS "GOCODE",
        GO.GO_NAME AS "GONAME",
        OT.OT_ODCODE AS "ODCODE",
        OT.OT_QTY AS "OTQTY",
        GO.GO_PRICE * OT.OT_QTY AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE;

SELECT GOCODE,
        GONAME,
        COUNT(ODCODE),
        SUM(PRICE)
FROM FV1
WHERE ODCODE LIKE '20201013' || '%'
GROUP BY GOCODE, GONAME;

SELECT GOCODE,
        GONAME,
        COUNT(ODCODE),
        SUM(PRICE)
FROM FV1
WHERE TO_CHAR(ODCODE, 'YYYYMMDD') >= '20201013'  AND TO_CHAR(ODCODE, 'YYYYMMDD') <= '20201015'
GROUP BY GOCODE, GONAME;

SELECT TO_CHAR(OD_CODE, 'YYYYMM'),
        COUNT(OD_CODE)
FROM OD
GROUP BY TO_CHAR(OD_CODE, 'YYYYMM');

SELECT TO_CHAR(FV1.ODCODE, 'YYYYMM') AS "MONTHS",
        TEM.COUNT,
        SUM(PRICE)
FROM FV1 INNER JOIN (SELECT TO_CHAR(OD_CODE, 'YYYYMM') AS "ODCODE",
                           COUNT(OD_CODE) AS "COUNT"
                    FROM OD
                    GROUP BY TO_CHAR(OD_CODE, 'YYYYMM')) TEM ON TO_CHAR(FV1.ODCODE, 'YYYYMM') = TEM.ODCODE
GROUP BY TO_CHAR(FV1.ODCODE, 'YYYYMM'), TEM.COUNT;

CREATE OR REPLACE VIEW TEM1
AS
SELECT TO_CHAR(ODCODE, 'YYYYMM') AS "MONTHS",
        GOCODE,
        GONAME,
        COUNT(ODCODE) AS "COUNT",
        SUM(OTQTY) AS "QTY",
        SUM(PRICE) AS "PRICE"
FROM FV1
GROUP BY TO_CHAR(ODCODE, 'YYYYMM'), GOCODE, GONAME;

SELECT MONTHS,
    MAX(QTY)
FROM TEM1
GROUP BY MONTHS;

SELECT *
FROM TEM1
WHERE (MONTHS, QTY) IN (SELECT MONTHS,
                                MAX(QTY)
                        FROM TEM1
                        GROUP BY MONTHS);

CREATE OR REPLACE VIEW FV2
AS
SELECT OT.OT_GOCODE AS "GOCODE",
        GO.GO_NAME AS "GONAME",
        TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD') AS "ODCODE",
        COUNT(OT.OT_ODCODE) AS "COUNT",
        SUM(OT.OT_QTY) AS "OTQTY",
        SUM(GO.GO_PRICE * OT.OT_QTY) AS "PRICE"
FROM OT INNER JOIN GO ON OT.OT_GOCODE = GO.GO_CODE
GROUP BY TO_CHAR(OT.OT_ODCODE, 'YYYYMMDD'), OT.OT_GOCODE, GO.GO_NAME;

SELECT GOCODE,
        GONAME,
        COUNT,
        PRICE
FROM FV2
WHERE ODCODE LIKE '20201013' || '%';

SELECT GOCODE,
        GONAME,
        COUNT,
        PRICE
FROM FV2
WHERE ODCODE >= '20201013' AND ODCODE <= '20201015';

SELECT TO_CHAR(OD_CODE, 'YYYYMM'),
        COUNT(OD_CODE)
FROM OD
GROUP BY TO_CHAR(OD_CODE, 'YYYYMM');

SELECT SUBSTR(FV2.ODCODE, 1, 6) AS "MONTHS",
        TEM.COUNT,
        SUM(PRICE)
FROM FV2 INNER JOIN (SELECT TO_CHAR(OD_CODE, 'YYYYMM') AS "ODCODE",
                           COUNT(OD_CODE) AS "COUNT"
                    FROM OD
                    GROUP BY TO_CHAR(OD_CODE, 'YYYYMM')) TEM ON SUBSTR(FV2.ODCODE, 1, 6) = TEM.ODCODE
GROUP BY SUBSTR(FV2.ODCODE, 1, 6), TEM.COUNT;

CREATE OR REPLACE VIEW TEM2
AS
SELECT SUBSTR(ODCODE, 1, 6) AS "MONTHS",
        GOCODE,
        GONAME,
        SUM(COUNT) AS "COUNT",
        SUM(OTQTY) AS "QTY",
        SUM(PRICE) AS "PRICE"
FROM FV2
GROUP BY SUBSTR(ODCODE, 1, 6), GOCODE, GONAME;

SELECT MONTHS,
        MAX(QTY)
FROM TEM2
GROUP BY MONTHS;

SELECT *
FROM TEM2
WHERE (MONTHS, QTY) IN(SELECT MONTHS,
                                MAX(QTY)
                        FROM TEM2
                        GROUP BY MONTHS);

COMMIT;

SELECT * FROM FV1;
SELECT * FROM FV2;
SELECT * FROM USER_TAB_PRIVS_RECD;
